swagger: "2.0"
info:
  title: beego Test API
  description: |
    beego has a very cool tools to autogenerate documents for your API
  version: 1.0.0
  termsOfService: http://beego.me/
  contact:
    email: astaxie@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
basePath: /v1
paths:
  /fechas/:
    get:
      tags:
      - fechas
      description: |-
        get Fechas
        <br>
      operationId: FechasController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Fechas'
        "404":
          description: not found resource
    post:
      tags:
      - fechas
      description: |-
        create Fechas
        <br>
      operationId: FechasController.Post
      parameters:
      - in: body
        name: body
        description: body for Fechas content
        required: true
        schema:
          $ref: '#/definitions/models.Fechas'
      responses:
        "201":
          description: '{int} models.Fechas'
        "400":
          description: the request contains incorrect syntax
  /fechas/{id}:
    get:
      tags:
      - fechas
      description: |-
        get Fechas by id
        <br>
      operationId: FechasController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Fechas'
        "404":
          description: not found resource
    put:
      tags:
      - fechas
      description: |-
        update the Fechas
        <br>
      operationId: FechasController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Fechas content
        required: true
        schema:
          $ref: '#/definitions/models.Fechas'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Fechas'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - fechas
      description: |-
        delete the Fechas
        <br>
      operationId: FechasController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /novedades_poscontractuales/:
    get:
      tags:
      - novedades_poscontractuales
      description: |-
        get NovedadesPoscontractuales
        <br>
      operationId: NovedadesPoscontractualesController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.NovedadesPoscontractuales'
        "404":
          description: not found resource
    post:
      tags:
      - novedades_poscontractuales
      description: |-
        create NovedadesPoscontractuales
        <br>
      operationId: NovedadesPoscontractualesController.Post
      parameters:
      - in: body
        name: body
        description: body for NovedadesPoscontractuales content
        required: true
        schema:
          $ref: '#/definitions/models.NovedadesPoscontractuales'
      responses:
        "201":
          description: '{int} models.NovedadesPoscontractuales'
        "400":
          description: the request contains incorrect syntax
  /novedades_poscontractuales/{id}:
    get:
      tags:
      - novedades_poscontractuales
      description: |-
        get NovedadesPoscontractuales by id
        <br>
      operationId: NovedadesPoscontractualesController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.NovedadesPoscontractuales'
        "404":
          description: not found resource
    put:
      tags:
      - novedades_poscontractuales
      description: |-
        update the NovedadesPoscontractuales
        <br>
      operationId: NovedadesPoscontractualesController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for NovedadesPoscontractuales content
        required: true
        schema:
          $ref: '#/definitions/models.NovedadesPoscontractuales'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.NovedadesPoscontractuales'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - novedades_poscontractuales
      description: |-
        delete the NovedadesPoscontractuales
        <br>
      operationId: NovedadesPoscontractualesController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /poliza/:
    get:
      tags:
      - poliza
      description: |-
        get Poliza
        <br>
      operationId: PolizaController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Poliza'
        "404":
          description: not found resource
    post:
      tags:
      - poliza
      description: |-
        create Poliza
        <br>
      operationId: PolizaController.Post
      parameters:
      - in: body
        name: body
        description: body for Poliza content
        required: true
        schema:
          $ref: '#/definitions/models.Poliza'
      responses:
        "201":
          description: '{int} models.Poliza'
        "400":
          description: the request contains incorrect syntax
  /poliza/{id}:
    get:
      tags:
      - poliza
      description: |-
        get Poliza by id
        <br>
      operationId: PolizaController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Poliza'
        "404":
          description: not found resource
    put:
      tags:
      - poliza
      description: |-
        update the Poliza
        <br>
      operationId: PolizaController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Poliza content
        required: true
        schema:
          $ref: '#/definitions/models.Poliza'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Poliza'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - poliza
      description: |-
        delete the Poliza
        <br>
      operationId: PolizaController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /propiedad/:
    get:
      tags:
      - propiedad
      description: |-
        get Propiedad
        <br>
      operationId: PropiedadController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Propiedad'
        "404":
          description: not found resource
    post:
      tags:
      - propiedad
      description: |-
        create Propiedad
        <br>
      operationId: PropiedadController.Post
      parameters:
      - in: body
        name: body
        description: body for Propiedad content
        required: true
        schema:
          $ref: '#/definitions/models.Propiedad'
      responses:
        "201":
          description: '{int} models.Propiedad'
        "400":
          description: the request contains incorrect syntax
  /propiedad/{id}:
    get:
      tags:
      - propiedad
      description: |-
        get Propiedad by id
        <br>
      operationId: PropiedadController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Propiedad'
        "404":
          description: not found resource
    put:
      tags:
      - propiedad
      description: |-
        update the Propiedad
        <br>
      operationId: PropiedadController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Propiedad content
        required: true
        schema:
          $ref: '#/definitions/models.Propiedad'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Propiedad'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - propiedad
      description: |-
        delete the Propiedad
        <br>
      operationId: PropiedadController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /tipo_fecha/:
    get:
      tags:
      - tipo_fecha
      description: |-
        get TipoFecha
        <br>
      operationId: TipoFechaController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoFecha'
        "404":
          description: not found resource
    post:
      tags:
      - tipo_fecha
      description: |-
        create TipoFecha
        <br>
      operationId: TipoFechaController.Post
      parameters:
      - in: body
        name: body
        description: body for TipoFecha content
        required: true
        schema:
          $ref: '#/definitions/models.TipoFecha'
      responses:
        "201":
          description: '{int} models.TipoFecha'
        "400":
          description: the request contains incorrect syntax
  /tipo_fecha/{id}:
    get:
      tags:
      - tipo_fecha
      description: |-
        get TipoFecha by id
        <br>
      operationId: TipoFechaController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoFecha'
        "404":
          description: not found resource
    put:
      tags:
      - tipo_fecha
      description: |-
        update the TipoFecha
        <br>
      operationId: TipoFechaController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for TipoFecha content
        required: true
        schema:
          $ref: '#/definitions/models.TipoFecha'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoFecha'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - tipo_fecha
      description: |-
        delete the TipoFecha
        <br>
      operationId: TipoFechaController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /tipo_novedad/:
    get:
      tags:
      - tipo_novedad
      description: |-
        get TipoNovedad
        <br>
      operationId: TipoNovedadController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoNovedad'
        "404":
          description: not found resource
    post:
      tags:
      - tipo_novedad
      description: |-
        create TipoNovedad
        <br>
      operationId: TipoNovedadController.Post
      parameters:
      - in: body
        name: body
        description: body for TipoNovedad content
        required: true
        schema:
          $ref: '#/definitions/models.TipoNovedad'
      responses:
        "201":
          description: '{int} models.TipoNovedad'
        "400":
          description: the request contains incorrect syntax
  /tipo_novedad/{id}:
    get:
      tags:
      - tipo_novedad
      description: |-
        get TipoNovedad by id
        <br>
      operationId: TipoNovedadController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoNovedad'
        "404":
          description: not found resource
    put:
      tags:
      - tipo_novedad
      description: |-
        update the TipoNovedad
        <br>
      operationId: TipoNovedadController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for TipoNovedad content
        required: true
        schema:
          $ref: '#/definitions/models.TipoNovedad'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoNovedad'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - tipo_novedad
      description: |-
        delete the TipoNovedad
        <br>
      operationId: TipoNovedadController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /tipo_propiedad/:
    get:
      tags:
      - tipo_propiedad
      description: |-
        get TipoPropiedad
        <br>
      operationId: TipoPropiedadController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoPropiedad'
        "404":
          description: not found resource
    post:
      tags:
      - tipo_propiedad
      description: |-
        create TipoPropiedad
        <br>
      operationId: TipoPropiedadController.Post
      parameters:
      - in: body
        name: body
        description: body for TipoPropiedad content
        required: true
        schema:
          $ref: '#/definitions/models.TipoPropiedad'
      responses:
        "201":
          description: '{int} models.TipoPropiedad'
        "400":
          description: the request contains incorrect syntax
  /tipo_propiedad/{id}:
    get:
      tags:
      - tipo_propiedad
      description: |-
        get TipoPropiedad by id
        <br>
      operationId: TipoPropiedadController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoPropiedad'
        "404":
          description: not found resource
    put:
      tags:
      - tipo_propiedad
      description: |-
        update the TipoPropiedad
        <br>
      operationId: TipoPropiedadController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for TipoPropiedad content
        required: true
        schema:
          $ref: '#/definitions/models.TipoPropiedad'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoPropiedad'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - tipo_propiedad
      description: |-
        delete the TipoPropiedad
        <br>
      operationId: TipoPropiedadController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /trNovedad/:
    post:
      tags:
      - trNovedad
      description: |-
        create Tr_novedad_poscontractual
        <br>
      operationId: Tr_novedad_poscontractualController.Post
      parameters:
      - in: body
        name: body
        description: body for Tr_novedad_poscontractual content
        required: true
        schema:
          $ref: '#/definitions/models.TrNovedadesPoscontractuales'
      responses:
        "201":
          description: '{int} models.TrNovedadesPoscontractuales'
        "403":
          description: body is empty
  /trNovedad/{id}:
    put:
      tags:
      - trNovedad
      description: |-
        update the Tr_novedad_poscontractual
        <br>
      operationId: Tr_novedad_poscontractualController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Tr_novedad_poscontractual content
        required: true
        schema:
          $ref: '#/definitions/models.Tr_novedad_poscontractual'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Tr_novedad_poscontractual'
        "403":
          description: :id is not int
  /trNovedad/trnovedadpoliza/:
    post:
      tags:
      - trNovedad
      description: |-
        Transacción para crear novedad con poliza
        <br>
      operationId: Tr_novedad_poscontractualController.Post
      parameters:
      - in: body
        name: body
        description: body for Tr_novedad_poscontractual content
        required: true
        schema:
          $ref: '#/definitions/models.TrNovedadesPoscontractualesPoliza'
      responses:
        "201":
          description: '{int} models.TrNovedadesPoscontractualesPoliza'
        "400":
          description: the request contains incorrect syntax
definitions:
  33319.<nil>.Fechas:
    title: Fechas
    type: object
  33353.<nil>.Propiedad:
    title: Propiedad
    type: object
  33390.<nil>.AprobacionFirma:
    title: AprobacionFirma
    type: object
  33536.<nil>.Fechas:
    title: Fechas
    type: object
  33570.<nil>.Propiedad:
    title: Propiedad
    type: object
  33607.<nil>.Poliza:
    title: Poliza
    type: object
  33641.<nil>.AprobacionFirma:
    title: AprobacionFirma
    type: object
  models.Fechas:
    title: Fechas
    type: object
    properties:
      Activo:
        type: boolean
      Fecha:
        type: string
      FechaCreacion:
        type: string
      FechaModificacion:
        type: string
      Id:
        type: integer
        format: int64
      IdNovedadesPoscontractuales:
        $ref: '#/definitions/models.NovedadesPoscontractuales'
      IdTipoFecha:
        $ref: '#/definitions/models.TipoFecha'
  models.NovedadesPoscontractuales:
    title: NovedadesPoscontractuales
    type: object
    properties:
      Aclaracion:
        type: string
      Activo:
        type: boolean
      ContratoId:
        type: integer
        format: int64
      EnlaceDocumento:
        type: string
      Estado:
        type: string
      FechaCreacion:
        type: string
      FechaModificacion:
        type: string
      Id:
        type: integer
        format: int64
      Motivo:
        type: string
      NumeroCdpId:
        type: integer
        format: int64
      NumeroSolicitud:
        type: string
      Observacion:
        type: string
      TipoNovedad:
        type: integer
        format: int64
      Vigencia:
        type: integer
        format: int64
      VigenciaCdp:
        type: integer
        format: int64
  models.Poliza:
    title: Poliza
    type: object
    properties:
      Activo:
        type: boolean
      EntidadAseguradoraId:
        type: integer
        format: int64
      FechaCreacion:
        type: string
      FechaModificacion:
        type: string
      Id:
        type: integer
        format: int64
      IdNovedadesPoscontractuales:
        $ref: '#/definitions/models.NovedadesPoscontractuales'
      NumeroPolizaId:
        type: string
  models.Propiedad:
    title: Propiedad
    type: object
    properties:
      Activo:
        type: boolean
      FechaCreacion:
        type: string
      FechaModificacion:
        type: string
      Id:
        type: integer
        format: int64
      IdNovedadesPoscontractuales:
        $ref: '#/definitions/models.NovedadesPoscontractuales'
      IdTipoPropiedad:
        $ref: '#/definitions/models.TipoPropiedad'
      Propiedad:
        type: integer
        format: int64
  models.TipoFecha:
    title: TipoFecha
    type: object
    properties:
      Activo:
        type: boolean
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      FechaCreacion:
        type: string
      FechaModificacion:
        type: string
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
      NumeroOrden:
        type: number
        format: double
      TipoNovedad:
        type: integer
        format: int64
  models.TipoNovedad:
    title: TipoNovedad
    type: object
    properties:
      Activo:
        type: boolean
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      FechaCreacion:
        type: string
      FechaModificacion:
        type: string
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
      NumeroOrden:
        type: number
        format: double
  models.TipoPropiedad:
    title: TipoPropiedad
    type: object
    properties:
      Activo:
        type: boolean
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      FechaCreacion:
        type: string
      FechaModificacion:
        type: string
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
      NumeroOrden:
        type: number
        format: double
      TipoNovedad:
        type: integer
        format: int32
  models.Tr_novedad_poscontractual:
    title: Tr_novedad_poscontractual
    type: object
  models.TrNovedadesPoscontractuales:
    title: TrNovedadesPoscontractuales
    type: object
    properties:
      AprobacionFirma:
        $ref: '#/definitions/33390.<nil>.AprobacionFirma'
      Fechas:
        $ref: '#/definitions/33319.<nil>.Fechas'
      NovedadPoscontractual:
        $ref: '#/definitions/models.NovedadesPoscontractuales'
      Propiedad:
        $ref: '#/definitions/33353.<nil>.Propiedad'
  models.TrNovedadesPoscontractualesPoliza:
    title: TrNovedadesPoscontractualesPoliza
    type: object
    properties:
      AprobacionFirma:
        $ref: '#/definitions/33641.<nil>.AprobacionFirma'
      Fechas:
        $ref: '#/definitions/33536.<nil>.Fechas'
      NovedadPoscontractual:
        $ref: '#/definitions/models.NovedadesPoscontractuales'
      Poliza:
        $ref: '#/definitions/33607.<nil>.Poliza'
      Propiedad:
        $ref: '#/definitions/33570.<nil>.Propiedad'
tags:
- name: novedades_poscontractuales
  description: |
    NovedadesPoscontractualesController operations for NovedadesPoscontractuales
- name: tipo_fecha
  description: |
    TipoFechaController operations for TipoFecha
- name: tipo_propiedad
  description: |
    TipoPropiedadController operations for TipoPropiedad
- name: fechas
  description: |
    FechasController operations for Fechas
- name: poliza
  description: |
    PolizaController operations for Poliza
- name: propiedad
  description: |
    PropiedadController operations for Propiedad
- name: tipo_novedad
  description: |
    TipoNovedadController operations for TipoNovedad
- name: trNovedad
  description: |
    Tr_novedad_poscontractualController operations for Tr_novedad_poscontractual
